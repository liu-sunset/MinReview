<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="peng.zhi.liu.mapper.CampusMapper">
    <insert id="addCampusMapper">
        insert into campus(name, address,description, create_time, update_time)
                    values(#{name},#{address},#{description},#{createTime},#{updateTime})
    </insert>
    <update id="modifyCampusMapper">
        update campus
        <set>
            <if test="name != null">,name = #{name}</if>
            <if test="address != null">,address = #{address}</if>
            <if test="description != null">,description = #{description}</if>
            <if test="status != null">,status = #{status}</if>
            <if test="createTime != null">,create_time = #{createTime}</if>
            <if test="updateTime != null">,update_time = #{updateTime}</if>
        </set>
        where id = #{id}
    </update>
    <delete id="deleteCampusMapper">
        delete from campus where id = #{id}
    </delete>

    <select id="campusPageMapper" resultType="peng.zhi.liu.vo.CampusPageVO">
        select * from campus
        <where>
            <if test="keyWord!=null"> name like concat('%',#{keyWord},'%')</if>
        </where>
          order by update_time desc
      </select>
      <select id="getCampusListMapper" resultType="peng.zhi.liu.vo.CampusPageVO">
          select c.id, c.name, c.address, c.status
          from campus c
          where c.status = 1
          order by c.update_time desc
      </select>
    <select id="selectCampusDetailMapper" resultType="peng.zhi.liu.vo.CampusDetailVO">
        select * from campus where id = #{id}
    </select>
</mapper>
